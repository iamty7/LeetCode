package easy;

public class FindTheDifference {
	/*
	 * Given two strings s and t which consist of only lowercase letters.
	 * 
	 * String t is generated by random shuffling string s and then add one more
	 * letter at a random position.
	 * 
	 * Find the letter that was added in t.
	 * 
	 * Example:
	 * 
	 * Input: s = "abcd" t = "abcde"
	 * 
	 * Output: e
	 * 
	 * Explanation: 'e' is the letter that was added.
	 */

	// I find that many Hashmap and char related problems can be solved through
	// array with a faster speed
	public char solution(String s, String t) {
		// Your runtime beats 57.53% of java submissions. Runtime 8ms
		char ret = 0;
		int[] chars = new int[128];
		int i = 0;
		for (; i < s.length(); i++) {
			chars[t.charAt(i)]++;
			chars[s.charAt(i)]--;
		}
		chars[t.charAt(i)]++;
		for (int j = 0; j < chars.length; j++) {
			if (chars[j] == 1) {
				ret = (char) j;
				break;
			}
		}

		return ret;

	}

	public char solutio2(String s, String t) {
		// !!Using bit manipulation
		// Your runtime beats 19.65% of java submissions. Runtime 15ms
		int n = t.length();
		char c = t.charAt(n - 1);
		for (int i = 0; i < n - 1; ++i) {
			c ^= s.charAt(i);
			c ^= t.charAt(i);
		}
		return c;

	}
}
